{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozoux\\\\steam-dashboard\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { getTopGamesByCategory } from '../services/SteamSpyService';\nimport CategoryGamesComponent from './CategoryGamesComponent';\nimport CountryGamesComponent from './CountryGamesComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [categoryGames, setCategoryGames] = useState([]);\n  const [countryGames, setCountryGames] = useState([]);\n  useEffect(() => {\n    // Fonction pour charger les jeux les plus joués par catégorie\n    const fetchCategoryGames = async () => {\n      try {\n        const games = await getTopGamesByCategory('action');\n        setCategoryGames(games);\n      } catch (error) {\n        console.error('Error fetching category games:', error);\n      }\n    };\n\n    // Fonction pour charger les jeux les plus joués par pays\n    // À implémenter de manière similaire\n\n    fetchCategoryGames();\n    // Appel à la fonction pour charger les jeux par pays\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Steam Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryGamesComponent, {\n      games: categoryGames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"B0G8okfzKH7vM/XEq85/R3wPJoY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","getTopGamesByCategory","CategoryGamesComponent","CountryGamesComponent","jsxDEV","_jsxDEV","Dashboard","_s","categoryGames","setCategoryGames","countryGames","setCountryGames","fetchCategoryGames","games","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ozoux/steam-dashboard/src/components/Dashboard.js"],"sourcesContent":["// Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getTopGamesByCategory } from '../services/SteamSpyService';\r\nimport CategoryGamesComponent from './CategoryGamesComponent';\r\nimport CountryGamesComponent from './CountryGamesComponent';\r\n\r\nconst Dashboard = () => {\r\n    const [categoryGames, setCategoryGames] = useState([]);\r\n    const [countryGames, setCountryGames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fonction pour charger les jeux les plus joués par catégorie\r\n        const fetchCategoryGames = async () => {\r\n            try {\r\n                const games = await getTopGamesByCategory('action');\r\n                setCategoryGames(games);\r\n            } catch (error) {\r\n                console.error('Error fetching category games:', error);\r\n            }\r\n        };\r\n\r\n        // Fonction pour charger les jeux les plus joués par pays\r\n        // À implémenter de manière similaire\r\n\r\n        fetchCategoryGames();\r\n        // Appel à la fonction pour charger les jeux par pays\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Steam Dashboard</h1>\r\n            <CategoryGamesComponent games={categoryGames} />\r\n            {/* Composant pour afficher les jeux par pays */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,qBAAqB,QAAQ,6BAA6B;AACnE,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,KAAK,GAAG,MAAMZ,qBAAqB,CAAC,QAAQ,CAAC;QACnDQ,gBAAgB,CAACI,KAAK,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;;IAED;IACA;;IAEAF,kBAAkB,CAAC,CAAC;IACpB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBf,OAAA,CAACH,sBAAsB;MAACW,KAAK,EAAEL;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/C,CAAC;AAEd,CAAC;AAACb,EAAA,CA7BID,SAAS;AAAAe,EAAA,GAATf,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}