{"ast":null,"code":"// SteamSpyService.js\nimport axios from 'axios';\nconst BASE_URL = '/api/api.php';\nconst getTopGamesByCategory = async category => {\n  try {\n    const response = await axios.get(`${BASE_URL}?request=top100in${category}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération des jeux par catégorie :', error);\n    throw error; // Vous pouvez également choisir de traiter l'erreur ici\n  }\n};\nexport { getTopGamesByCategory }; // Export de la fonction pour l'utiliser ailleurs dans l'application","map":{"version":3,"names":["axios","BASE_URL","getTopGamesByCategory","category","response","get","data","error","console"],"sources":["C:/Users/ozoux/steam-charts/steam-dashboard/src/services/SteamSpyService.js"],"sourcesContent":["// SteamSpyService.js\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = '/api/api.php';\r\n\r\nconst getTopGamesByCategory = async (category) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}?request=top100in${category}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Erreur lors de la récupération des jeux par catégorie :', error);\r\n        throw error; // Vous pouvez également choisir de traiter l'erreur ici\r\n    }\r\n};\r\n\r\nexport { getTopGamesByCategory }; // Export de la fonction pour l'utiliser ailleurs dans l'application\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,cAAc;AAE/B,MAAMC,qBAAqB,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,QAAS,oBAAmBE,QAAS,EAAC,CAAC;IAC3E,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yDAAyD,EAAEA,KAAK,CAAC;IAC/E,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;AAED,SAASL,qBAAqB,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}